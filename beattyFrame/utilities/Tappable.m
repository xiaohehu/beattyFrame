//
//  Tappable.m
//  harborpoint
//
//  Created by Evan Buxton on 4/21/16.
//  Copyright (c) 2016 neoscape. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "Tappable.h"


@implementation Tappable

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawCanvas1WithTitle: (NSString*)title selected: (BOOL)selected
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* lightred = [UIColor colorWithRed: 0.965 green: 0.227 blue: 0.255 alpha: 1];
    UIColor* darkred = [UIColor colorWithRed: 0.847 green: 0.137 blue: 0.165 alpha: 1];
    UIColor* darkblue = [UIColor colorWithRed: 0.041 green: 0.214 blue: 0.371 alpha: 1];
    UIColor* lightblue = [UIColor colorWithRed: 0.122 green: 0.413 blue: 0.659 alpha: 1];
    UIColor* titlecolor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    UIColor* iconcolor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.8];
    UIColor* strokecolor = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.706];

    //// def-state
    {
        //// bgcolor-selected Drawing
        UIBezierPath* bgcolorselectedPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1, 1, 61, 61)];
        [lightblue setFill];
        [bgcolorselectedPath fill];
        [strokecolor setStroke];
        bgcolorselectedPath.lineWidth = 2.5;
        [bgcolorselectedPath stroke];


        //// chipbg-selected Drawing
        UIBezierPath* chipbgselectedPath = [UIBezierPath bezierPath];
        [chipbgselectedPath moveToPoint: CGPointMake(56, 47.44)];
        [chipbgselectedPath addCurveToPoint: CGPointMake(31.5, 61) controlPoint1: CGPointMake(50.74, 55.61) controlPoint2: CGPointMake(41.73, 61)];
        [chipbgselectedPath addCurveToPoint: CGPointMake(7, 47.44) controlPoint1: CGPointMake(21.27, 61) controlPoint2: CGPointMake(12.26, 55.61)];
        [chipbgselectedPath addLineToPoint: CGPointMake(56, 47.44)];
        [chipbgselectedPath closePath];
        [darkblue setFill];
        [chipbgselectedPath fill];


        //// icon-normal Drawing
        UIBezierPath* iconnormalPath = [UIBezierPath bezierPath];
        [iconnormalPath moveToPoint: CGPointMake(31.78, 49.95)];
        [iconnormalPath addCurveToPoint: CGPointMake(31.78, 53.31) controlPoint1: CGPointMake(31.78, 49.95) controlPoint2: CGPointMake(31.78, 51.56)];
        [iconnormalPath addLineToPoint: CGPointMake(35.42, 53.31)];
        [iconnormalPath addLineToPoint: CGPointMake(35.42, 54.27)];
        [iconnormalPath addLineToPoint: CGPointMake(31.78, 54.27)];
        [iconnormalPath addCurveToPoint: CGPointMake(31.78, 57.64) controlPoint1: CGPointMake(31.78, 56.02) controlPoint2: CGPointMake(31.78, 57.64)];
        [iconnormalPath addLineToPoint: CGPointMake(30.74, 57.64)];
        [iconnormalPath addCurveToPoint: CGPointMake(30.74, 54.27) controlPoint1: CGPointMake(30.74, 57.64) controlPoint2: CGPointMake(30.74, 56.02)];
        [iconnormalPath addLineToPoint: CGPointMake(27.11, 54.27)];
        [iconnormalPath addLineToPoint: CGPointMake(27.11, 53.31)];
        [iconnormalPath addLineToPoint: CGPointMake(30.74, 53.31)];
        [iconnormalPath addCurveToPoint: CGPointMake(30.74, 49.95) controlPoint1: CGPointMake(30.74, 51.56) controlPoint2: CGPointMake(30.74, 49.95)];
        [iconnormalPath addLineToPoint: CGPointMake(31.78, 49.95)];
        [iconnormalPath addLineToPoint: CGPointMake(31.78, 49.95)];
        [iconnormalPath closePath];
        [iconcolor setFill];
        [iconnormalPath fill];
    }


    if (selected)
    {
        //// sel-state
        {
            //// bgcolor-normal Drawing
            UIBezierPath* bgcolornormalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1, 1, 61, 61)];
            [darkred setFill];
            [bgcolornormalPath fill];
            [strokecolor setStroke];
            bgcolornormalPath.lineWidth = 2.5;
            [bgcolornormalPath stroke];


            //// chipbg-normal Drawing
            UIBezierPath* chipbgnormalPath = [UIBezierPath bezierPath];
            [chipbgnormalPath moveToPoint: CGPointMake(56, 47.44)];
            [chipbgnormalPath addCurveToPoint: CGPointMake(31.5, 60.59) controlPoint1: CGPointMake(50.74, 55.36) controlPoint2: CGPointMake(41.73, 60.59)];
            [chipbgnormalPath addCurveToPoint: CGPointMake(7, 47.44) controlPoint1: CGPointMake(21.27, 60.59) controlPoint2: CGPointMake(12.26, 55.36)];
            [chipbgnormalPath addLineToPoint: CGPointMake(56, 47.44)];
            [chipbgnormalPath closePath];
            [lightred setFill];
            [chipbgnormalPath fill];


            //// icon-selected Drawing
            UIBezierPath* iconselectedPath = [UIBezierPath bezierPathWithRect: CGRectMake(27.11, 53, 8, 1)];
            [iconcolor setFill];
            [iconselectedPath fill];
        }
    }


    //// text Drawing
    CGRect textRect = CGRectMake(11, 5, 41, 42);
    UIFont* textFont = [UIFont fontWithName: @"HelveticaNeue-Light" size: 10];
    [titlecolor setFill];
    CGFloat textTextHeight = [title sizeWithFont: textFont constrainedToSize: CGSizeMake(CGRectGetWidth(textRect), INFINITY) lineBreakMode: UILineBreakModeWordWrap].height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, textRect);
    [title drawInRect: CGRectMake(CGRectGetMinX(textRect), CGRectGetMinY(textRect) + (CGRectGetHeight(textRect) - textTextHeight) / 2, CGRectGetWidth(textRect), textTextHeight) withFont: textFont lineBreakMode: NSLineBreakByWordWrapping alignment: NSTextAlignmentCenter];
    CGContextRestoreGState(context);
}

@end
